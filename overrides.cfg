############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. This file will not be erased
# when updating the config using moonraker and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...
# The corresponding documentation can be found in: docs > overrides.md

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double MCU configuration)
#> Toolhead CANboard MCUs are called "toolhead"
#> MMU/ERCF MCUs are called "mmu" 

# ------------------------------------------------------------------------------------------
[include config_backup.cfg]
[include mainsail.cfg]
[include timelapse.cfg]
# [include KNOMI.cfg]

#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
# [gcode_macro _USER_VARIABLES]
# variable_startprint_actions: "action1", "action2", ...
# gcode: # do not remove this line

[mcu]
##--------------------------------------------------------------------
canbus_uuid: ffe1ee59e69c
canbus_interface: can0
##--------------------------------------------------------------------

[mcu toolhead]
##--------------------------------------------------------------------
#canbus_uuid: 71d338900ecd
canbus_uuid: 912a891f394c
##--------------------------------------------------------------------

[mcu mmu]
##--------------------------------------------------------------------
canbus_uuid: 78ccba98e382
##--------------------------------------------------------------------
#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

## Here is an example of some overrides for the PIDs. I put them here as almost everyone will use them,
## so just uncomment the following lines and change the values according to your own machine
[exclude_object]

[input_shaper]
shaper_type_x: 3hump_ei
shaper_freq_x: 93.2
shaper_type_y: mzv
shaper_freq_y: 40.0

[printer]
max_accel: 1800  # should not exceed the estimated max_accel for X and Y axes

[stepper_x]
position_endstop: 350
homing_positive_dir: true
position_min: 0
position_max: 350
# homing_speed: 20 #Max 100
homing_retract_dist: 0

[stepper_y]
position_endstop: 350
homing_positive_dir: true
position_min: 0
position_max: 350
# homing_speed: 20 #Max 100
homing_retract_dist: 0

[tmc5160 stepper_x]
spi_software_sclk_pin: mcu:MCU_SPI4_SCK
spi_software_mosi_pin: mcu:MCU_SPI4_MOSI
spi_software_miso_pin: mcu:MCU_SPI4_MISO
# spi_bus: spi4
cs_pin: mcu:MCU_X_MOT_CS_PDN
diag1_pin: ^!mcu:X_STOP
run_current: 1
driver_SGT: 1

[tmc5160 stepper_y]
spi_software_sclk_pin: mcu:MCU_SPI4_SCK
spi_software_mosi_pin: mcu:MCU_SPI4_MOSI
spi_software_miso_pin: mcu:MCU_SPI4_MISO
# spi_bus: spi4
cs_pin: mcu:MCU_Y_MOT_CS_PDN
diag1_pin: ^!mcu:Y_STOP
run_current: 1
driver_SGT: 1

[stepper_z]
position_max: 340
position_min: -5
homing_speed: 8
second_homing_speed: 3

# [tmc2209 stepper_x]
# run_current: 1.0
# diag_pin:^mcu:X_STOP
# driver_SGTHRS: 47

# [tmc2209 stepper_y]
# run_current: 1.00
# diag_pin: ^mcu:Y_STOP
# driver_SGTHRS: 47

[tmc5160 stepper_z]
spi_software_sclk_pin: mcu:MCU_SPI4_SCK
spi_software_mosi_pin: mcu:MCU_SPI4_MOSI
spi_software_miso_pin: mcu:MCU_SPI4_MISO
cs_pin: mcu:MCU_Z_MOT_CS_PDN
interpolate: true

[tmc5160 stepper_z1]
spi_software_sclk_pin: mcu:MCU_SPI4_SCK
spi_software_mosi_pin: mcu:MCU_SPI4_MOSI
spi_software_miso_pin: mcu:MCU_SPI4_MISO
cs_pin: mcu:MCU_E1_MOT_CS_PDN
interpolate: true

[tmc5160 stepper_z2]
spi_software_sclk_pin: mcu:MCU_SPI4_SCK
spi_software_mosi_pin: mcu:MCU_SPI4_MOSI
spi_software_miso_pin: mcu:MCU_SPI4_MISO
cs_pin: mcu:MCU_E2_MOT_CS_PDN
interpolate: true

[tmc5160 stepper_z3]
spi_software_sclk_pin: mcu:MCU_SPI4_SCK
spi_software_mosi_pin: mcu:MCU_SPI4_MOSI
spi_software_miso_pin: mcu:MCU_SPI4_MISO
cs_pin: mcu:MCU_E3_MOT_CS_PDN
interpolate: true

#-------------------------#
#   Z MOTORS DIRECTION    #
#-------------------------#

## Here is an example of some overrides for the motor directions as it's a pretty common one. If you need
## to invert the Z1 or Z3 motor direction on your machine, just uncomment the following lines.

[stepper_z1]
dir_pin: !Z1_DIR

[stepper_z3]
dir_pin: !Z3_DIR

#-------------------------#
#   Fans                  #
#-------------------------#

[heater_fan hotend_fan]
# SB Extruder cooling FAN also named Axial FAN in BTT SB22XX doc
pin: toolhead:E_FAN
tachometer_pin: toolhead:E_FAN_TACH
tachometer_ppr: 2
tachometer_poll_interval: 0.0015
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[fan]
pin:toolhead:PART_FAN
#   Print cooling fan VFAN2 named call Turbine FAN in BTT SB22XX doc
max_power: 1.0
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[controller_fan toolhead_fan]
#  BTT EBBSB2209 External cooling (VFAN1_PWM)
pin: toolhead:TOOLHEAD_FAN
max_power: 1.0
kick_start_time: 0.5
off_below: 0.10
heater: extruder
fan_speed: 1.0

[heater_fan chamber_box]
##	Print Cooling Fan - FAN1 Connector
pin: mcu:CHAMBER_FAN
max_power: 1.0
heater: heater_bed
heater_temp: 35
kick_start_time: 0.5
off_below: 0.10

[heater_fan bed_box]
##	Controller fan - FAN2 Connector
pin: mcu:CONTROLLER_FAN
max_power: 1.0
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0
fan_speed: 0.5

[fan_generic bed_fan]
##  spider fan - FAN3 Connector
pin: mcu:SPIDER_FAN
kick_start_time: 0.5
max_power: 1.0
off_below: 0.10

[fan_generic Nevermore]
## Nevermore fan - FAN4 Connector on Spider v3.0
pin: mcu:NEVERMORE_FAN  

[fan_generic filter]
##  nevermore fan - FAN5 Connector
pin: mcu:FILTER_FAN

[heater_fan exhaust_filter]
##  exhaust fan - E2 OUT Connector
pin: mcu:EXHAUST_FAN

[probe]
pin: !toolhead:PROBE_INPUT
speed: 5	; probing speed of 5mm/second ideal is <10mm/sec
samples_tolerance_retries: 4
z_offset: -0.770

[heater_bed]
##	Adjust Max Power to avoid bed warp
max_power: 0.6
min_temp: 0  
max_temp: 120  
control: pid
pid_kp: 39.381
pid_ki: 1.544
pid_kd: 251.052

[temperature_sensor Chamber]
sensor_pin: mcu:CHAMBER_TEMPERATURE
sensor_type: EPCOS 100K B57560G104F
min_temp: 0
max_temp: 100
gcode_id: C

[temperature_sensor Toolhead_Chamber]
sensor_type: Generic 3950
sensor_pin: toolhead: CHAMBER_TEMPERATURE
min_temp: 0
max_temp: 100

[extruder]
step_pin: toolhead:E_STEP
dir_pin: !toolhead:E_DIR
enable_pin: !toolhead:E_ENABLE
heater_pin: toolhead:E_HEATER
sensor_pin: toolhead:E_TEMPERATURE
endstop_pin: tmc2209_extruder:virtual_endstop
instantaneous_corner_velocity: 1.5255
max_extrude_only_velocity: 60
# Next 3 parameters for fast heating ceramic heater
pwm_cycle_time: 0.02
smooth_time: 0.5
max_power: 0.8
## PID calibrated
control: pid
pid_kp: 17.366
pid_ki: 1.378
pid_kd: 54.705

[tmc2209 extruder]
uart_pin: toolhead:E_TMCUART
diag_pin: toolhead:E_DIAG		# Set to MCU pin connected to TMC DIAG pin for extruder
driver_SGTHRS: 100				# 255 is most sensitive value, 0 is least sensitive
run_current: 0.600
stealthchop_threshold: 0

[tmc2209 stepper_mmu_gear]
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 20
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 3
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True
driver_PWM_LIM: 12
driver_PWM_REG: 8
driver_PWM_FREQ: 1
driver_PWM_GRAD: 14
driver_PWM_OFS: 36
driver_SGTHRS: 0

[tmc2209 stepper_mmu_selector]
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 20
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 3
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True
driver_PWM_LIM: 12
driver_PWM_REG: 8
driver_PWM_FREQ: 1
driver_PWM_GRAD: 14
driver_PWM_OFS: 36
driver_SGTHRS: 0

[adxl345]
axes_map: z,-y,x

[resonance_tester]
probe_points: 100, 100, 20
accel_chip: adxl345

[temperature_sensor ERCF_sensor]
sensor_type: AHT10
#   Default is 56 (0x38). Some AHT10 sensors give the option to use 57 (0x39) by moving a resistor.
i2c_address: 56
i2c_mcu: mmu
i2c_bus: i2c3_PB3_PB4
i2c_speed: 400000
aht10_report_time: 60
#   Interval in seconds between readings. Default is 30, minimum is 5

[temperature_sensor VORON_sensor]
sensor_type: BME280
i2c_address: 118
i2c_mcu: rpi
i2c_bus: i2c.1
i2c_speed: 400000
# Use a modified bme280.py (BME_REPORT_TIME = 60) version to lower the report frequency to 1/minute and drop the rpi use%

[temperature_sensor Chamber]
sensor_pin: mcu:CHAMBER_TEMPERATURE
sensor_type: EPCOS 100K B57560G104F
min_temp: 0
max_temp: 100
gcode_id: C

[temperature_sensor Toolhead_Chamber]
sensor_type: Generic 3950
sensor_pin: toolhead: CHAMBER_TEMPERATURE
min_temp: 0
max_temp: 100

[gcode_macro ENV_REPORT]
# Apply also pressure correction for Elevation (~1168 feet) at Lat 40.957329504 (N) and Long -81.337165318 (W) : +42.16 hPa
gcode:
    {% set sensor = printer["bme280 VORON_sensor"] %}
    {action_respond_info(
        "Temperature: %.2f C\n"
        "Pressure: %.2f hPa\n"
        "Humidity: %.2f%%\n"
        "Gas Level: %.2f VOC" % (
            sensor.temperature,
            sensor.pressure+42.16,
            sensor.humidity ))}
               
[neopixel light]
pin: mcu:LIGHT_NEOPIXEL
chain_count: 108               # The amount of neo pixels in the strip
color_order: GRBW              # The type of neo pixel strip, e.g. RGBW GRB, RGB
initial_WHITE: 1.0             # Lights will be white when printer turns on
initial_RED: 1.0               # The next 4 values are for the color you want the lights to start up with. 
initial_GREEN: 1.0             # Setting all the lights to 0, will turn them off
initial_BLUE: 1.0

[gcode_macro CASELIGHT]
gcode:
    {% set brightness = printer['neopixel light'].color_data[0][3] %}
    {% if brightness == 0 %}
      SET_LED LED=light RED=1 GREEN=1 BLUE=1 WHITE=1 SYNC=0 TRANSMIT=1
      {action_respond_info("Caselight on")}
    {% else %}
      SET_LED LED=light RED=0 GREEN=0 BLUE=0 WHITE=0 SYNC=0 TRANSMIT=1
      {action_respond_info("Caselight off")}
    {% endif %}

[neopixel status_leds]
pin: toolhead:STATUS_NEOPIXEL

## Filament Sensor BTT SFS V2

#[gcode_macro _USER_VARIABLES]
#variable_filament_sensor_enabled: False
#gcode:

#[filament_switch_sensor switch_sensor]
#switch_pin: ^mcu:RUNOUT_SENSOR
#pause_on_runout: False
#runout_gcode:
#	PAUSE # [pause_resume] required in printer.cfg
#	M117 Filament switch runout
#insert_gcode:
#	M117 Filament switch inserted
#event_delay:
#pause_delay:

#[filament_motion_sensor encoder_sensor]
#switch_pin: ^mcu:ENCODER_SENSOR
#detection_length: 2.88 # accuracy of motion sensor 2.88mm
#extruder: extruder
#pause_on_runout: False
#runout_gcode:
#	PAUSE # [pause_resume] required in printer.cfg
#	M117 Filament encoder runout
#insert_gcode:
#	M117 Filament encoder inserted
#event_delay:
#pause_delay:

## Filament Width Sensor

[hall_filament_width_sensor]
#Virtual filament_switch_sensor support.
#Values from filament_switch_sensor. See the "filament_switch_sensor" section for information on these parameters.
#
adc1: nano: PC0
adc2: nano: PC1
# adc1 and adc2 channels select own pins Analog input pins on 3d printer board
# Sensor power supply can be 3.3v or 5v
Cal_dia1: 1.729 # Reference diameter point 1 (mm)
Cal_dia2: 1.879 # Reference diameter point 2 (mm)
# The measurement principle provides for two-point calibration
# In calibration process you must use rods of known diameter
# I use drill rods as the base diameter.
# nominal filament diameter must be between Cal_dia1 and Cal_dia2
# Your size may differ from the indicated ones, for example 2.05
Raw_dia1:10872 # Raw sensor value for reference point 1
Raw_dia2:10805 # Raw sensor value for reference point 2
# Raw value of sensor in units
# can be readed by command QUERY_RAW_FILAMENT_WIDTH
default_nominal_filament_diameter: 1.75 # This parameter is in millimeters (mm)
max_difference: 0.15
# Maximum allowed filament diameter difference in millimeters (mm)
# If difference between nominal filament diameter and sensor output is more
# than +- max_difference, extrusion multiplier set back to %100
measurement_delay: 70
# The distance from sensor to the melting chamber/hot-end in millimeters (mm).
# The filament between the sensor and the hot-end will be treated as the default_nominal_filament_diameter.
# Host module works with FIFO logic. It keeps each sensor value and position in
# an array and POP them back in correct position.
enable: False
# Sensor enabled or disabled after power on. Disabled by default
measurement_interval:10
# Sensor readings done with 10 mm intervals by default. If necessary you are free to change this setting
logging: False
#  Out diameter to terminal and klipper.log
#  can be turned on|off by command
min_diameter:1.6
# Minimal diameter for trigger virtual filament_switch_sensor.
#use_current_dia_while_delay: False
# Use the current diameter instead of the nominal diamenter while the measurement delay has not run through.
#pause_on_runout: True
#runout_gcode:
#insert_gcode:
#event_delay: 3.0
#pause_delay: 0.5

[menu __main __filament __width_current]
type: command
enable: {'hall_filament_width_sensor' in printer}
name: Dia: {'%.3F' % printer.hall_filament_width_sensor.Diameter}
index: 0

[menu __main __filament __raw_width_current]
type: command
enable: {'hall_filament_width_sensor' in printer}
name: Raw: {'%4.0F' % printer.hall_filament_width_sensor.Raw}
index: 1

[delayed_gcode _INIT_FILAMENT_WIDTH_DISABLE]
initial_duration: 1
gcode: 
	DISABLE_FILAMENT_WIDTH_SENSOR
	DISABLE_FILAMENT_WIDTH_LOG
##
# The following functions are available
# QUERY_FILAMENT_WIDTH 			; Return the current measured filament width.
# RESET_FILAMENT_WIDTH_SENSOR	; Clear all sensor readings. Helpful after filament change.
# DISABLE_FILAMENT_WIDTH_SENSOR	; Turn off the filament width sensor and stop using it for flow control.
# ENABLE_FILAMENT_WIDTH_SENSOR	; Turn on the filament width sensor and start using it for flow control.
# QUERY_RAW_FILAMENT_WIDTH		; Return the current ADC channel readings and RAW sensor value for calibration points.
# ENABLE_FILAMENT_WIDTH_LOG		; Turn on diameter logging.
# DISABLE_FILAMENT_WIDTH_LOG	; Turn off diameter logging.	
##--------------------------------------------------------------------

[autotune_tmc stepper_x]
motor: fysetc-17HS19-2004S-C
# sg4_thrs: 47		; for TMC2209
sg4_thrs: 1

[autotune_tmc stepper_y]
motor: fysetc-17HS19-2004S-C
# sg4_thrs: 47		; for TMC2209
sg4_thrs: 1

[autotune_tmc stepper_z]
motor: fysetc-17HS19-2004S-C

[autotune_tmc stepper_z1]
motor: fysetc-17HS19-2004S-C

[autotune_tmc stepper_z2]
motor: fysetc-17HS19-2004S-C

[autotune_tmc stepper_z3]
motor: fysetc-17HS19-2004S-C

[autotune_tmc extruder]
motor: fysetc-G36HSY4405-6D-1200
#motor: moons-cse14hra1l410a 		; Stealth stock 
#motor: ldo-36sth20-1004ahg-9T
sg4_thrs: 100

[motor_constants fysetc-G36HSY4405-6D-1200]
resistance: 2.4
inductance: 0.0017
holding_torque: 0.110
max_current: 1.0
steps_per_revolution: 200

[autotune_tmc stepper_mmu_gear]
motor: fysetc-35STH28-104A-0.5R
sg4_thrs: 60

[motor_constants fysetc-35STH28-104A-0.5R]
resistance: 3.2
inductance: 0.0035
holding_torque: 0.13
max_current: 1.0
steps_per_revolution: 200

[autotune_tmc stepper_mmu_selector]
motor: fysetc-42HS20401B-20-0.5M
sg4_thrs: 75

[motor_constants fysetc-42HS20401B-20-0.5M]
resistance: 3.5
inductance: 0.0045
holding_torque: 0.14
max_current: 1.0

[motor_constants fysetc-G36HSY4405-6D-1200]
resistance: 2.4
inductance: 0.0017
holding_torque: 0.110
max_current: 1.0
steps_per_revolution: 200

[autotune_tmc stepper_mmu_gear]
motor: fysetc-35STH28-104A-0.5R
sg4_thrs: 60

[motor_constants fysetc-35STH28-104A-0.5R]
resistance: 3.2
inductance: 0.0035
holding_torque: 0.13
max_current: 1.0
steps_per_revolution: 200

[autotune_tmc stepper_mmu_selector]
motor: fysetc-42HS20401B-20-0.5M
sg4_thrs: 75

[motor_constants fysetc-42HS20401B-20-0.5M]
resistance: 3.5
inductance: 0.0045
holding_torque: 0.14
max_current: 1.0
steps_per_revolution: 200

##--------------------------------------------------------------------

    
## Mainsail Variables
[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : False  ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 320   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 350   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 5.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
gcode:

## Position helpers

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1

[gcode_macro UNSAFE_RAISE_TOOL]
description: Raise the toolhead 10mm without homing: MoveUp after Crash or PrintAbort
gcode:
    G90
    SET_KINEMATIC_POSITION Z=0
    G0 Z10 F600
    M84

## KNOMI

[gcode_macro _KNOMI_STATUS]
variable_homing: False
variable_probing: False
variable_qgling: False
variable_heating_nozzle: False
variable_heating_bed: False
gcode:

## Gcode Macros

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}[include K-ShakeTune/*.cfg]
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=_tone VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=_tone VALUE=0

[gcode_macro BEEP]
gcode:
	UPDATE_DELAYED_GCODE ID=_BEEPING DURATION=1

[delayed_gcode _BEEPING]
gcode:
    M300 P500
    UPDATE_DELAYED_GCODE ID=_BEEPING DURATION=1
 
[gcode_macro QUIET]
gcode:
    UPDATE_DELAYED_GCODE ID=_BEEPING DURATION=0  

#[gcode_macro _INIT_USERCUSTOM]
#gcode:
#   ## Your custom code here

# ---- CUSTOM Macro section
# this section is reserved for personal customized start actions, which can be combined with all other start actions
# in order to use this, create a new macro in overrides.cfg

#[gcode_macro _MODULE_CUSTOM1]
## Custom code to prime pellets
#gcode:#
#	SAVE_GCODE_STATE Name=Custom1 ; save state and pos
#    M106 S255                      ;partcooling fan max
#    _CUSTOM_CLEAN                  ;call a custom_clean macro
#    G1  Z10 F3000                  ;move up by 10 to avoid objects
#    G1  X15 Y5 F15000              ;move to xy purge position
#    G1  Z0.3 F3000                 ;drop down to purge position
#    G91                            ;incremental positioning
#    G1  Z0.2 E30 F3                ;prime hotend
#    G1  Z2.0 E25 F30               ;purge and move up
#    G1  Z4.0 E20 F60               ;purge and move up
#    G1  Z2.0 E10 F240              ;purge and move up
#    G1  Z10  E-0.1 F3600           ;move up by 10 and retract slightly
#    G1  Y55 Z-18.25 F3000          ;move to wiping start
#    G1  Y10 F3000                  ;wipe back
#    G1  Y-10 F3000                 ;wipe forth
#    G1  Y10 F3000                  ;wipe back
#    G1  Y-10 F3000                 ;wipe forth
#    G1  Y-55 F3000                 ;wipe end and kick off the poop pellet
#   M107                           ;turn cooling fan off
#    G1  Z2.0  F3000                ;move up
#    G1  Y55   F7000                ;move from pellet bin quickly!
#    M82                            ;extruder absolute
#    G92 E0.0                       ;extruder reset
#    G90                            ;absolute positioning
#    M107                           ;partcooling fan off
#	RESTORE_GCODE_STATE NAME=Custom1 MOVE=1 MOVE_SPEED=100 ; restore state and pos
#------------------------------------------------------------------------

#[gcode_macro _CUSTOM_CLEAN]
#gcode:
#    M204 S6000                     ;set acceleration to 6000
#    G1 X15 Y35 F15000              ;move to position back of dedicated bucket
#    G1 Z0.5 F3000                  ;move to position to push into bucket
#    G1 Y1 F10000                   ;kick the prime tower off
#-----------------------------------------------------------------------

[gcode_macro _MODULE_CUSTOM1]
gcode:
## Your custom code here  

[gcode_macro _MODULE_CUSTOM2]
gcode:
## Your custom code here

[gcode_macro _MODULE_CUSTOM3]
gcode:
## Your custom code here
